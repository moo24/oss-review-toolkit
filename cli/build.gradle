plugins {
    // Apply core plugins.
    id 'application'

    // Apply third-party plugins.
    id 'com.bmuschko.docker-java-application'
    id 'com.bmuschko.docker-remote-api'
}

applicationName = 'ort'
mainClassName = 'com.here.ort.Main'

task dockerBuildBaseImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
    description = 'Builds the base Docker image to run ORT.'
    //inputDir = file('docker')
    dockerFile = file('Dockerfile-to-run-ORT')
    tags = ['ort-base:latest']
}

docker {
    javaApplication {
        baseImage = 'ort-base:latest'
        tag = 'ort:latest'
    }
}

dockerBuildImage.dependsOn dockerBuildBaseImage

repositories {
    jcenter()

    // Need to repeat the analyzer's custom repository definition here, see
    // https://github.com/gradle/gradle/issues/4106.
    maven {
        url 'https://repo.gradle.org/gradle/libs-releases-local/'
    }
}

dependencies {
    compile project(':analyzer')
    compile project(':downloader')
    compile project(':evaluator')
    compile project(':model')
    compile project(':reporter')
    compile project(':scanner')
    compile project(':utils')

    compile "com.beust:jcommander:$jcommanderVersion"

    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile 'org.jetbrains.kotlin:kotlin-reflect'

    compile "org.reflections:reflections:$reflectionsVersion"

    testCompile project(':test-utils')

    testCompile "io.kotlintest:kotlintest-core:$kotlintestVersion"
    testCompile "io.kotlintest:kotlintest-assertions:$kotlintestVersion"
    testCompile "io.kotlintest:kotlintest-runner-junit5:$kotlintestVersion"

    funTestCompile sourceSets.main.output
    funTestCompile sourceSets.test.output
    funTestCompile configurations.testCompile
    funTestRuntime configurations.testRuntime
}
